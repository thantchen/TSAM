// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace TsaData.Models;

public partial class TsaSchedule
{
    public string TsaSubId { get; set; }

    public string TsaId { get; set; }

    public string Function { get; set; }

    public string SubFunction { get; set; }

    public string ServiceName { get; set; }

    public string DetailedServiceDescription { get; set; }

    public string TsaVsRtsa { get; set; }

    public string PrimaryOwner { get; set; }

    public string ReceiverOwner { get; set; }

    public string ServiceExceptions { get; set; }

    public string ServiceLocation { get; set; }

    public string EstimatedDurationText { get; set; }

    public string Assumptions { get; set; }

    public string ExceptionsToMonthlyInvoice { get; set; }

    public string ExceptionsTo30DayPayment { get; set; }

    public string NoticeOfTerminationText { get; set; }

    public string ExceptionsReOwnershipIp { get; set; }

    public string TsaExitApproach { get; set; }

    public string KnownTsaExitCosts { get; set; }

    public string KnownDependencies { get; set; }

    public string UnitDescription { get; set; }

    public string NumOfUnits { get; set; }

    public string PricePerUnit { get; set; }

    public decimal? MonthlyPricing { get; set; }

    public decimal? Usd { get; set; }

    public decimal? Inr { get; set; }

    public decimal? Crc { get; set; }

    public decimal? Mxn { get; set; }

    public decimal? Php { get; set; }

    public decimal? Bgn { get; set; }

    public decimal? Brl { get; set; }

    public string CostType { get; set; }

    public string AdditionalPricingComments { get; set; }

    public string TaxDetermination { get; set; }

    public int? EstimatedDuration { get; set; }

    public string OptionFlag { get; set; }

    public int? MaxOptionDuration { get; set; }

    public string OptionExercisedFlag { get; set; }

    public int? ActiveOptionDurationExercised { get; set; }

    public decimal? ExitCostAmount { get; set; }

    public string ChangeLogType { get; set; }

    public decimal? MonthlyCostForecast { get; set; }

    public DateOnly? StartDate { get; set; }

    public DateOnly? OriginalEndDate { get; set; }

    public DateOnly? ActiveEndDate { get; set; }

    public DateTime CreatedDate { get; set; }

    public long CreatedUserId { get; set; }

    public DateTime LastModifiedDate { get; set; }

    public long LastModifiedUserId { get; set; }

    public int FileRepositoryId { get; set; }

    public int Revision { get; set; }

    public decimal? Aud { get; set; }

    public decimal? Cad { get; set; }

    public decimal? Cny { get; set; }

    public string Currency { get; set; }

    public decimal? Czk { get; set; }

    public decimal? Dkk { get; set; }

    public decimal? Eur { get; set; }

    public decimal? Gbp { get; set; }

    public decimal? Huf { get; set; }

    public decimal? Pln { get; set; }

    public string SeparationOrStandalone { get; set; }

    public decimal? Sgd { get; set; }

    public string ProviderOwner { get; set; }

    public string MonthlyPricingText { get; set; }

    public int? NoticeOfTermNum { get; set; }

    public virtual ICollection<AddLog> AddLogs { get; set; } = new List<AddLog>();

    public virtual ICollection<ChangeLog> ChangeLogs { get; set; } = new List<ChangeLog>();

    public virtual ICollection<ChangeResolutionLog> ChangeResolutionLogs { get; set; } = new List<ChangeResolutionLog>();

    public virtual ICollection<DisputeLog> DisputeLogs { get; set; } = new List<DisputeLog>();

    public virtual FileRepository FileRepository { get; set; }

    public virtual ICollection<Invoice> Invoices { get; set; } = new List<Invoice>();

    public virtual ICollection<Payment> Payments { get; set; } = new List<Payment>();

    public virtual ICollection<SellSideNotificationChange> SellSideNotificationChanges { get; set; } = new List<SellSideNotificationChange>();

    public virtual ICollection<SellSideNotificationDispute> SellSideNotificationDisputes { get; set; } = new List<SellSideNotificationDispute>();
}